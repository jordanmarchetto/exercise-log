name: CI/CD Pipeline

on:
  push:
    branches:
      - 'main'
jobs:
  rspec_tests:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres_user
          POSTGRES_PASSWORD: postgres_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3.0 

    - name: Install dependencies
      run: |
        gem install bundler
        bundle install --jobs 4 --retry 3

    - name: Set up the database
      env:
        DB_USER: postgres_user
        DB_PASSWORD: postgres_password
        DB_HOST: localhost
        DB_PORT: 5432
      run: bin/rails db:create db:schema:load RAILS_ENV=test  # Set up the test database

    - name: Run RSpec
      run: bundle exec rspec

  build:
    needs: rspec_tests
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: jordanmarchetto/exercise-log:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }} #ssh key
          port: ${{ secrets.PORT }}
          script: |
            echo "going to script dir"
            cd ${{ secrets.PROJECT_PATH}}
            echo "running update script"
            ./${{ secrets.SCRIPT_TO_RUN }}
